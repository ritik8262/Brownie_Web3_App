{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "NewWave",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAllWaves",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "waver",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct WavePortal.Wave[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalWaves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastWavedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWaves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "wave",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "waves",
      "outputs": [
        {
          "internalType": "address",
          "name": "waver",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/WavePortal.sol"
  },
  "ast": {
    "absolutePath": "contracts/WavePortal.sol",
    "exportedSymbols": {
      "WavePortal": [
        155
      ]
    },
    "id": 156,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "WavePortal",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 155,
        "linearizedBaseContracts": [
          155
        ],
        "name": "WavePortal",
        "nameLocation": "65:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a42a4663",
            "id": 5,
            "mutability": "mutable",
            "name": "lastWavedAt",
            "nameLocation": "117:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 155,
            "src": "82:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "90:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "82:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "101:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "seed",
            "nameLocation": "151:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 155,
            "src": "135:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "135:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "291bcab3",
            "id": 9,
            "mutability": "mutable",
            "name": "totalWaves",
            "nameLocation": "176:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 155,
            "src": "161:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "5f7e16dc676677766a70e9c5628aa6c54ddb8b6e5188e2ae1e1f17f1ffbea716",
            "id": 17,
            "name": "NewWave",
            "nameLocation": "199:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "223:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "207:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "238:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "230:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "230:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "256:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "249:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "206:59:0"
            },
            "src": "193:73:0"
          },
          {
            "canonicalName": "WavePortal.Wave",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "waver",
                "nameLocation": "302:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "294:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "294:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "message",
                "nameLocation": "324:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "317:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 20,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "317:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "349:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "341:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Wave",
            "nameLocation": "279:4:0",
            "nodeType": "StructDefinition",
            "scope": 155,
            "src": "272:93:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c781267a",
            "id": 28,
            "mutability": "mutable",
            "name": "waves",
            "nameLocation": "385:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 155,
            "src": "371:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Wave_$24_storage_$dyn_storage",
              "typeString": "struct WavePortal.Wave[]"
            },
            "typeName": {
              "baseType": {
                "id": 26,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 25,
                  "name": "Wave",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "371:4:0"
                },
                "referencedDeclaration": 24,
                "src": "371:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Wave_$24_storage_ptr",
                  "typeString": "struct WavePortal.Wave"
                }
              },
              "id": 27,
              "nodeType": "ArrayTypeName",
              "src": "371:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Wave_$24_storage_$dyn_storage_ptr",
                "typeString": "struct WavePortal.Wave[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "419:66:0",
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "429:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 32,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "437:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "437:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 34,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "455:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 35,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "difficulty",
                              "nodeType": "MemberAccess",
                              "src": "455:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "437:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 37,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "436:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "475:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "436:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "429:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "429:49:0"
                }
              ]
            },
            "id": 43,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:2:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:0"
            },
            "scope": 155,
            "src": "397:88:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "544:846:0",
              "statements": [
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48,
                      "name": "totalWaves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "768:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "782:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "768:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "768:15:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 56,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "810:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "810:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 58,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "822:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 59,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "832:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "832:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 55,
                          "name": "Wave",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "805:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Wave_$24_storage_ptr_$",
                            "typeString": "type(struct WavePortal.Wave storage pointer)"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "805:43:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Wave_$24_memory_ptr",
                          "typeString": "struct WavePortal.Wave memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Wave_$24_memory_ptr",
                          "typeString": "struct WavePortal.Wave memory"
                        }
                      ],
                      "expression": {
                        "id": 52,
                        "name": "waves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "794:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Wave_$24_storage_$dyn_storage",
                          "typeString": "struct WavePortal.Wave storage ref[] storage ref"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "794:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Wave_$24_storage_$dyn_storage_ptr_$_t_struct$_Wave_$24_storage_$returns$__$bound_to$_t_array$_t_struct$_Wave_$24_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct WavePortal.Wave storage ref[] storage pointer,struct WavePortal.Wave storage ref)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:55:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "794:55:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "860:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 65,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "868:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 66,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "868:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 67,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "886:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 68,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "difficulty",
                                "nodeType": "MemberAccess",
                                "src": "886:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "868:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 70,
                              "name": "seed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "905:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "868:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 72,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "867:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "913:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "867:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "860:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "860:56:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 77,
                      "name": "seed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "931:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3530",
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "939:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "931:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "IfStatement",
                  "src": "927:395:0",
                  "trueBody": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "943:379:0",
                    "statements": [
                      {
                        "assignments": [
                          81
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 81,
                            "mutability": "mutable",
                            "name": "prizeAmount",
                            "nameLocation": "965:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 113,
                            "src": "957:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 80,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "957:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 83,
                        "initialValue": {
                          "hexValue": "302e30303031",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "979:12:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000_by_1",
                            "typeString": "int_const 100000000000000"
                          },
                          "value": "0.0001"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "957:34:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 85,
                                "name": "prizeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "1030:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 88,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1053:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WavePortal_$155",
                                        "typeString": "contract WavePortal"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_WavePortal_$155",
                                        "typeString": "contract WavePortal"
                                      }
                                    ],
                                    "id": 87,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1045:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 86,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1045:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 89,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1045:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 90,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "1045:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1030:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "547279696e6720746f207769746864726177206d6f7265206d6f6e6579207468616e207468697320636f6e747261637420686173212121",
                              "id": 92,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1084:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_53c04bda6fdf1882c38cc5ee3d0fb4580110d481f30c6dc24dbeedeaa32fc5c2",
                                "typeString": "literal_string \"Trying to withdraw more money than this contract has!!!\""
                              },
                              "value": "Trying to withdraw more money than this contract has!!!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_53c04bda6fdf1882c38cc5ee3d0fb4580110d481f30c6dc24dbeedeaa32fc5c2",
                                "typeString": "literal_string \"Trying to withdraw more money than this contract has!!!\""
                              }
                            ],
                            "id": 84,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1005:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1005:150:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "1005:150:0"
                      },
                      {
                        "assignments": [
                          96,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 96,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1176:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 113,
                            "src": "1171:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 95,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1171:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 107,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1234:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 99,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "1197:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1197:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 98,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1189:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 97,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1189:8:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1189:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1189:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 103,
                                "name": "prizeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81,
                                "src": "1221:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1189:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1189:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1170:67:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 109,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "1260:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f207769746864726177206d6f6e65792066726f6d20636f6e74726163742e",
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1269:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4c7d0354ba68589e581b85f390730ad71fd60f59ff8639f5d4050c0fb29c2053",
                                "typeString": "literal_string \"Failed to withdraw money from contract.\""
                              },
                              "value": "Failed to withdraw money from contract."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4c7d0354ba68589e581b85f390730ad71fd60f59ff8639f5d4050c0fb29c2053",
                                "typeString": "literal_string \"Failed to withdraw money from contract.\""
                              }
                            ],
                            "id": 108,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1252:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1252:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "1252:59:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1345:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1345:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 118,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1357:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1357:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 120,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1374:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 115,
                      "name": "NewWave",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1337:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "1332:51:0"
                }
              ]
            },
            "functionSelector": "449d46c0",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wave",
            "nameLocation": "500:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "519:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "505:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:24:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "544:0:0"
            },
            "scope": 155,
            "src": "491:899:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1455:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 131,
                    "name": "waves",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "1472:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Wave_$24_storage_$dyn_storage",
                      "typeString": "struct WavePortal.Wave storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 132,
                  "nodeType": "Return",
                  "src": "1465:12:0"
                }
              ]
            },
            "functionSelector": "bd43a908",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllWaves",
            "nameLocation": "1405:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1416:2:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1440:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Wave_$24_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct WavePortal.Wave[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 127,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 126,
                        "name": "Wave",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24,
                        "src": "1440:4:0"
                      },
                      "referencedDeclaration": 24,
                      "src": "1440:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Wave_$24_storage_ptr",
                        "typeString": "struct WavePortal.Wave"
                      }
                    },
                    "id": 128,
                    "nodeType": "ArrayTypeName",
                    "src": "1440:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Wave_$24_storage_$dyn_storage_ptr",
                      "typeString": "struct WavePortal.Wave[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1439:15:0"
            },
            "scope": 155,
            "src": "1396:88:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "1545:34:0",
              "statements": [
                {
                  "expression": {
                    "id": 139,
                    "name": "totalWaves",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "1562:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 140,
                  "nodeType": "Return",
                  "src": "1555:17:0"
                }
              ]
            },
            "functionSelector": "9a2cdc08",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalWaves",
            "nameLocation": "1499:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1512:2:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1536:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:9:0"
            },
            "scope": 155,
            "src": "1490:89:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "1638:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 149,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1663:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WavePortal_$155",
                            "typeString": "contract WavePortal"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WavePortal_$155",
                            "typeString": "contract WavePortal"
                          }
                        ],
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1655:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1655:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1655:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1655:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 146,
                  "id": 152,
                  "nodeType": "Return",
                  "src": "1648:28:0"
                }
              ]
            },
            "functionSelector": "017088e4",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_Balance",
            "nameLocation": "1594:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:0"
            },
            "returnParameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 154,
                  "src": "1629:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:9:0"
            },
            "scope": 155,
            "src": "1585:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 156,
        "src": "56:1629:0",
        "usedErrors": []
      }
    ],
    "src": "31:1655:0"
  },
  "bytecode": "608060405260646100104442610022565b61001a9190610048565b60015561006a565b6000821982111561004357634e487b7160e01b600052601160045260246000fd5b500190565b60008261006557634e487b7160e01b600052601260045260246000fd5b500690565b610934806100796000396000f3fe6080604052600436106100705760003560e01c80639a2cdc081161004e5780639a2cdc08146100c2578063a42a4663146100d7578063bd43a90814610104578063c781267a1461012657600080fd5b8063017088e414610075578063291bcab314610097578063449d46c0146100ad575b600080fd5b34801561008157600080fd5b50475b6040519081526020015b60405180910390f35b3480156100a357600080fd5b5061008460025481565b6100c06100bb366004610654565b610155565b005b3480156100ce57600080fd5b50600254610084565b3480156100e357600080fd5b506100846100f2366004610705565b60006020819052908152604090205481565b34801561011057600080fd5b506101196103cc565b60405161008e9190610782565b34801561013257600080fd5b5061014661014136600461080e565b6104dd565b60405161008e93929190610827565b600160026000828254610168919061085b565b90915550506040805160608101825233815260208082018481524293830193909352600380546001810182556000829052835191027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180546001600160a01b03939093166001600160a01b0319909316929092178255935180519394919361021b937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c9093019291909101906105a5565b5060408201518160020155505060646001544442610239919061085b565b610243919061085b565b61024d9190610881565b600181905560321061038657655af3107a4000478111156102db5760405162461bcd60e51b815260206004820152603760248201527f547279696e6720746f207769746864726177206d6f7265206d6f6e657920746860448201527f616e207468697320636f6e74726163742068617321212100000000000000000060648201526084015b60405180910390fd5b604051600090339083908381818185875af1925050503d806000811461031d576040519150601f19603f3d011682016040523d82523d6000602084013e610322565b606091505b50509050806103835760405162461bcd60e51b815260206004820152602760248201527f4661696c656420746f207769746864726177206d6f6e65792066726f6d20636f604482015266373a3930b1ba1760c91b60648201526084016102d2565b50505b336001600160a01b03167f5f7e16dc676677766a70e9c5628aa6c54ddb8b6e5188e2ae1e1f17f1ffbea71642836040516103c19291906108a3565b60405180910390a250565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156104d457600084815260209081902060408051606081019091526003850290910180546001600160a01b031682526001810180549293919291840191610439906108c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610465906108c4565b80156104b25780601f10610487576101008083540402835291602001916104b2565b820191906000526020600020905b81548152906001019060200180831161049557829003601f168201915b50505050508152602001600282015481525050815260200190600101906103f0565b50505050905090565b600381815481106104ed57600080fd5b6000918252602090912060039091020180546001820180546001600160a01b0390921693509061051c906108c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610548906108c4565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b5050505050908060020154905083565b8280546105b1906108c4565b90600052602060002090601f0160209004810192826105d35760008555610619565b82601f106105ec57805160ff1916838001178555610619565b82800160010185558215610619579182015b828111156106195782518255916020019190600101906105fe565b50610625929150610629565b5090565b5b80821115610625576000815560010161062a565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561066657600080fd5b813567ffffffffffffffff8082111561067e57600080fd5b818401915084601f83011261069257600080fd5b8135818111156106a4576106a461063e565b604051601f8201601f19908116603f011681019083821181831017156106cc576106cc61063e565b816040528281528760208487010111156106e557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561071757600080fd5b81356001600160a01b038116811461072e57600080fd5b9392505050565b6000815180845260005b8181101561075b5760208185018101518683018201520161073f565b8181111561076d576000602083870101525b50601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561080057888303603f19018552815180516001600160a01b03168452878101516060898601819052906107e282870182610735565b928901519589019590955250948701949250908601906001016107a9565b509098975050505050505050565b60006020828403121561082057600080fd5b5035919050565b6001600160a01b038416815260606020820181905260009061084b90830185610735565b9050826040830152949350505050565b6000821982111561087c57634e487b7160e01b600052601160045260246000fd5b500190565b60008261089e57634e487b7160e01b600052601260045260246000fd5b500690565b8281526040602082015260006108bc6040830184610735565b949350505050565b600181811c908216806108d857607f821691505b6020821081036108f857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202fa7f2e04aa4f64189b1c6f02826fccb59513b007245e86e7b850538c6409cec64736f6c634300080d0033",
  "bytecodeSha1": "93773e627ec251a3a341ca24df190ad74ac60ce5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "WavePortal",
  "coverageMap": {
    "branches": {
      "0": {
        "WavePortal.wave": {
          "9": [
            1030,
            1066,
            true
          ],
          "10": [
            1260,
            1267,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "WavePortal.getAllWaves": {
          "8": [
            1465,
            1477
          ]
        },
        "WavePortal.getTotalWaves": {
          "1": [
            1555,
            1572
          ]
        },
        "WavePortal.get_Balance": {
          "0": [
            1648,
            1676
          ]
        },
        "WavePortal.wave": {
          "2": [
            768,
            783
          ],
          "3": [
            794,
            849
          ],
          "4": [
            860,
            916
          ],
          "5": [
            1005,
            1155
          ],
          "6": [
            1252,
            1311
          ],
          "7": [
            1332,
            1383
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100705760003560e01c80639a2cdc081161004e5780639a2cdc08146100c2578063a42a4663146100d7578063bd43a90814610104578063c781267a1461012657600080fd5b8063017088e414610075578063291bcab314610097578063449d46c0146100ad575b600080fd5b34801561008157600080fd5b50475b6040519081526020015b60405180910390f35b3480156100a357600080fd5b5061008460025481565b6100c06100bb366004610654565b610155565b005b3480156100ce57600080fd5b50600254610084565b3480156100e357600080fd5b506100846100f2366004610705565b60006020819052908152604090205481565b34801561011057600080fd5b506101196103cc565b60405161008e9190610782565b34801561013257600080fd5b5061014661014136600461080e565b6104dd565b60405161008e93929190610827565b600160026000828254610168919061085b565b90915550506040805160608101825233815260208082018481524293830193909352600380546001810182556000829052835191027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180546001600160a01b03939093166001600160a01b0319909316929092178255935180519394919361021b937fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c9093019291909101906105a5565b5060408201518160020155505060646001544442610239919061085b565b610243919061085b565b61024d9190610881565b600181905560321061038657655af3107a4000478111156102db5760405162461bcd60e51b815260206004820152603760248201527f547279696e6720746f207769746864726177206d6f7265206d6f6e657920746860448201527f616e207468697320636f6e74726163742068617321212100000000000000000060648201526084015b60405180910390fd5b604051600090339083908381818185875af1925050503d806000811461031d576040519150601f19603f3d011682016040523d82523d6000602084013e610322565b606091505b50509050806103835760405162461bcd60e51b815260206004820152602760248201527f4661696c656420746f207769746864726177206d6f6e65792066726f6d20636f604482015266373a3930b1ba1760c91b60648201526084016102d2565b50505b336001600160a01b03167f5f7e16dc676677766a70e9c5628aa6c54ddb8b6e5188e2ae1e1f17f1ffbea71642836040516103c19291906108a3565b60405180910390a250565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156104d457600084815260209081902060408051606081019091526003850290910180546001600160a01b031682526001810180549293919291840191610439906108c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610465906108c4565b80156104b25780601f10610487576101008083540402835291602001916104b2565b820191906000526020600020905b81548152906001019060200180831161049557829003601f168201915b50505050508152602001600282015481525050815260200190600101906103f0565b50505050905090565b600381815481106104ed57600080fd5b6000918252602090912060039091020180546001820180546001600160a01b0390921693509061051c906108c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610548906108c4565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b5050505050908060020154905083565b8280546105b1906108c4565b90600052602060002090601f0160209004810192826105d35760008555610619565b82601f106105ec57805160ff1916838001178555610619565b82800160010185558215610619579182015b828111156106195782518255916020019190600101906105fe565b50610625929150610629565b5090565b5b80821115610625576000815560010161062a565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561066657600080fd5b813567ffffffffffffffff8082111561067e57600080fd5b818401915084601f83011261069257600080fd5b8135818111156106a4576106a461063e565b604051601f8201601f19908116603f011681019083821181831017156106cc576106cc61063e565b816040528281528760208487010111156106e557600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561071757600080fd5b81356001600160a01b038116811461072e57600080fd5b9392505050565b6000815180845260005b8181101561075b5760208185018101518683018201520161073f565b8181111561076d576000602083870101525b50601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561080057888303603f19018552815180516001600160a01b03168452878101516060898601819052906107e282870182610735565b928901519589019590955250948701949250908601906001016107a9565b509098975050505050505050565b60006020828403121561082057600080fd5b5035919050565b6001600160a01b038416815260606020820181905260009061084b90830185610735565b9050826040830152949350505050565b6000821982111561087c57634e487b7160e01b600052601160045260246000fd5b500190565b60008261089e57634e487b7160e01b600052601260045260246000fd5b500690565b8281526040602082015260006108bc6040830184610735565b949350505050565b600181811c908216806108d857607f821691505b6020821081036108f857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212202fa7f2e04aa4f64189b1c6f02826fccb59513b007245e86e7b850538c6409cec64736f6c634300080d0033",
  "deployedSourceMap": "56:1629:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:98;;;;;;;;;;-1:-1:-1;1655:21:0;1585:98;;;160:25:1;;;148:2;133:18;1585:98:0;;;;;;;;161:25;;;;;;;;;;;;;;;;491:899;;;;;;:::i;:::-;;:::i;:::-;;1490:89;;;;;;;;;;-1:-1:-1;1562:10:0;;1490:89;;82:46;;;;;;;;;;-1:-1:-1;82:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;;1396:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;371:19::-;;;;;;;;;;-1:-1:-1;371:19:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;491:899::-;782:1;768:10;;:15;;;;;;;:::i;:::-;;;;-1:-1:-1;;805:43:0;;;;;;;;810:10;805:43;;;;;;;;;832:15;805:43;;;;;;;794:5;:55;;;;;;;-1:-1:-1;794:55:0;;;;;;;;;;;;-1:-1:-1;;;;;794:55:0;;;;-1:-1:-1;;;;;;794:55:0;;;;;;;;;;;;;805:43;;794:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;913:3;905:4;;886:16;868:15;:34;;;;:::i;:::-;:41;;;;:::i;:::-;867:49;;;;:::i;:::-;860:4;:56;;;939:2;-1:-1:-1;927:395:0;;979:12;1045:21;1030:36;;;1005:150;;;;-1:-1:-1;;;1005:150:0;;4411:2:1;1005:150:0;;;4393:21:1;4450:2;4430:18;;;4423:30;4489:34;4469:18;;;4462:62;4560:25;4540:18;;;4533:53;4603:19;;1005:150:0;;;;;;;;;1189:48;;1171:12;;1197:10;;1221:11;;1171:12;1189:48;1171:12;1189:48;1221:11;1197:10;1189:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1170:67;;;1260:7;1252:59;;;;-1:-1:-1;;;1252:59:0;;5045:2:1;1252:59:0;;;5027:21:1;5084:2;5064:18;;;5057:30;5123:34;5103:18;;;5096:62;-1:-1:-1;;;5174:18:1;;;5167:37;5221:19;;1252:59:0;4843:403:1;1252:59:0;943:379;;927:395;1345:10;-1:-1:-1;;;;;1337:46:0;;1357:15;1374:8;1337:46;;;;;;;:::i;:::-;;;;;;;;491:899;:::o;1396:88::-;1440:13;1472:5;1465:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1465:12:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:88;:::o;371:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;371:19:0;;;;-1:-1:-1;371:19:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:127:1;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:922;397:6;450:2;438:9;429:7;425:23;421:32;418:52;;;466:1;463;456:12;418:52;506:9;493:23;535:18;576:2;568:6;565:14;562:34;;;592:1;589;582:12;562:34;630:6;619:9;615:22;605:32;;675:7;668:4;664:2;660:13;656:27;646:55;;697:1;694;687:12;646:55;733:2;720:16;755:2;751;748:10;745:36;;;761:18;;:::i;:::-;836:2;830:9;804:2;890:13;;-1:-1:-1;;886:22:1;;;910:2;882:31;878:40;866:53;;;934:18;;;954:22;;;931:46;928:72;;;980:18;;:::i;:::-;1020:10;1016:2;1009:22;1055:2;1047:6;1040:18;1095:7;1090:2;1085;1081;1077:11;1073:20;1070:33;1067:53;;;1116:1;1113;1106:12;1067:53;1172:2;1167;1163;1159:11;1154:2;1146:6;1142:15;1129:46;1217:1;1195:15;;;1212:2;1191:24;1184:35;;;;-1:-1:-1;1199:6:1;328:922;-1:-1:-1;;;;;328:922:1:o;1255:286::-;1314:6;1367:2;1355:9;1346:7;1342:23;1338:32;1335:52;;;1383:1;1380;1373:12;1335:52;1409:23;;-1:-1:-1;;;;;1461:31:1;;1451:42;;1441:70;;1507:1;1504;1497:12;1441:70;1530:5;1255:286;-1:-1:-1;;;1255:286:1:o;1546:472::-;1588:3;1626:5;1620:12;1653:6;1648:3;1641:19;1678:1;1688:162;1702:6;1699:1;1696:13;1688:162;;;1764:4;1820:13;;;1816:22;;1810:29;1792:11;;;1788:20;;1781:59;1717:12;1688:162;;;1868:6;1865:1;1862:13;1859:87;;;1934:1;1927:4;1918:6;1913:3;1909:16;1905:27;1898:38;1859:87;-1:-1:-1;2000:2:1;1979:15;-1:-1:-1;;1975:29:1;1966:39;;;;2007:4;1962:50;;1546:472;-1:-1:-1;;1546:472:1:o;2023:1159::-;2205:4;2234:2;2274;2263:9;2259:18;2304:2;2293:9;2286:21;2327:6;2362;2356:13;2393:6;2385;2378:22;2419:2;2409:12;;2452:2;2441:9;2437:18;2430:25;;2514:2;2504:6;2501:1;2497:14;2486:9;2482:30;2478:39;2552:2;2544:6;2540:15;2573:1;2583:570;2597:6;2594:1;2591:13;2583:570;;;2662:22;;;-1:-1:-1;;2658:36:1;2646:49;;2718:13;;2790:9;;-1:-1:-1;;;;;2786:35:1;2771:51;;2861:11;;;2855:18;2754:4;2893:15;;;2886:27;;;2754:4;2940:48;2972:15;;;2855:18;2940:48;:::i;:::-;3031:11;;;3025:18;3008:15;;;3001:43;;;;-1:-1:-1;3131:12:1;;;;2926:62;-1:-1:-1;3096:15:1;;;;2619:1;2612:9;2583:570;;;-1:-1:-1;3170:6:1;;2023:1159;-1:-1:-1;;;;;;;;2023:1159:1:o;3187:180::-;3246:6;3299:2;3287:9;3278:7;3274:23;3270:32;3267:52;;;3315:1;3312;3305:12;3267:52;-1:-1:-1;3338:23:1;;3187:180;-1:-1:-1;3187:180:1:o;3372:388::-;-1:-1:-1;;;;;3577:32:1;;3559:51;;3646:2;3641;3626:18;;3619:30;;;-1:-1:-1;;3666:45:1;;3692:18;;3684:6;3666:45;:::i;:::-;3658:53;;3747:6;3742:2;3731:9;3727:18;3720:34;3372:388;;;;;;:::o;3765:225::-;3805:3;3836:1;3832:6;3829:1;3826:13;3823:136;;;3881:10;3876:3;3872:20;3869:1;3862:31;3916:4;3913:1;3906:15;3944:4;3941:1;3934:15;3823:136;-1:-1:-1;3975:9:1;;3765:225::o;3995:209::-;4027:1;4053;4043:132;;4097:10;4092:3;4088:20;4085:1;4078:31;4132:4;4129:1;4122:15;4160:4;4157:1;4150:15;4043:132;-1:-1:-1;4189:9:1;;3995:209::o;5251:291::-;5428:6;5417:9;5410:25;5471:2;5466;5455:9;5451:18;5444:30;5391:4;5491:45;5532:2;5521:9;5517:18;5509:6;5491:45;:::i;:::-;5483:53;5251:291;-1:-1:-1;;;;5251:291:1:o;5547:380::-;5626:1;5622:12;;;;5669;;;5690:61;;5744:4;5736:6;5732:17;5722:27;;5690:61;5797:2;5789:6;5786:14;5766:18;5763:38;5760:161;;5843:10;5838:3;5834:20;5831:1;5824:31;5878:4;5875:1;5868:15;5906:4;5903:1;5896:15;5760:161;;5547:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    56,
    1685
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A2CDC08 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9A2CDC08 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0xA42A4663 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0xBD43A908 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xC781267A EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x17088E4 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x291BCAB3 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x449D46C0 EQ PUSH2 0xAD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC0 PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xF2 CALLDATASIZE PUSH1 0x4 PUSH2 0x705 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x782 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0x80E JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 DUP3 SWAP1 MSTORE DUP4 MLOAD SWAP2 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP4 MLOAD DUP1 MLOAD SWAP4 SWAP5 SWAP2 SWAP4 PUSH2 0x21B SWAP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C SWAP1 SWAP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x5A5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x64 PUSH1 0x1 SLOAD DIFFICULTY TIMESTAMP PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x881 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x32 LT PUSH2 0x386 JUMPI PUSH6 0x5AF3107A4000 SELFBALANCE DUP2 GT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F207769746864726177206D6F7265206D6F6E6579207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E207468697320636F6E747261637420686173212121000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x31D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x322 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F207769746864726177206D6F6E65792066726F6D20636F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x373A3930B1BA17 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D2 JUMP JUMPDEST POP POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x5F7E16DC676677766A70E9C5628AA6C54DDB8B6E5188E2AE1E1F17F1FFBEA716 TIMESTAMP DUP4 PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP3 SWAP2 SWAP1 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x439 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x465 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x487 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x495 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3F0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x51C SWAP1 PUSH2 0x8C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x5B1 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x619 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x5EC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x619 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x619 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x619 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5FE JUMP JUMPDEST POP PUSH2 0x625 SWAP3 SWAP2 POP PUSH2 0x629 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x62A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x6A4 JUMPI PUSH2 0x6A4 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CC PUSH2 0x63E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x72E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x75B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x73F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x800 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x60 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0x7E2 DUP3 DUP8 ADD DUP3 PUSH2 0x735 JUMP JUMPDEST SWAP3 DUP10 ADD MLOAD SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7A9 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x84B SWAP1 DUP4 ADD DUP6 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x87C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x89E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x8BC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x8D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xA7 CALLCODE 0xE0 0x4A LOG4 0xF6 COINBASE DUP10 0xB1 0xC6 CREATE 0x28 0x26 0xFC 0xCB MSIZE MLOAD EXTCODESIZE STOP PUSH19 0x45E86E7B850538C6409CEC64736F6C63430008 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        56,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9A2CDC08"
    },
    "25": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9A2CDC08"
    },
    "36": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2"
    },
    "40": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA42A4663"
    },
    "47": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "51": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBD43A908"
    },
    "58": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "62": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC781267A"
    },
    "69": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x126"
    },
    "73": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "REVERT",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x17088E4"
    },
    "85": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "EQ",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x291BCAB3"
    },
    "96": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "100": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x449D46C0"
    },
    "107": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "111": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "DUP1",
      "path": "0"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        56,
        1685
      ],
      "op": "REVERT",
      "path": "0"
    },
    "117": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "118": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "119": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "121": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81"
    },
    "124": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "127": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "128": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "REVERT",
      "path": "0"
    },
    "129": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "130": {
      "op": "POP"
    },
    "131": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1655,
        1676
      ],
      "op": "SELFBALANCE",
      "path": "0",
      "statement": 0
    },
    "132": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "135": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "136": {
      "op": "SWAP1"
    },
    "137": {
      "op": "DUP2"
    },
    "138": {
      "op": "MSTORE"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "141": {
      "op": "ADD"
    },
    "142": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "143": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "145": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "146": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "DUP1",
      "path": "0"
    },
    "147": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "148": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "SUB",
      "path": "0"
    },
    "149": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "150": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        1585,
        1683
      ],
      "op": "RETURN",
      "path": "0"
    },
    "151": {
      "offset": [
        161,
        186
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "153": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "154": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "155": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "158": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "159": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "REVERT",
      "path": "0"
    },
    "163": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "POP",
      "path": "0"
    },
    "165": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "168": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "170": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "171": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "DUP2",
      "path": "0"
    },
    "172": {
      "fn": "WavePortal.get_Balance",
      "offset": [
        161,
        186
      ],
      "op": "JUMP",
      "path": "0"
    },
    "173": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "177": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "180": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "181": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "183": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x654"
    },
    "186": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        491,
        1390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "187": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "188": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x155"
    },
    "191": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        491,
        1390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "STOP",
      "path": "0"
    },
    "194": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "195": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "196": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "198": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "201": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "202": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "204": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "205": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "REVERT",
      "path": "0"
    },
    "206": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "op": "POP"
    },
    "208": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1562,
        1572
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x2"
    },
    "210": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1562,
        1572
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "211": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "214": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        1490,
        1579
      ],
      "op": "JUMP",
      "path": "0"
    },
    "215": {
      "offset": [
        82,
        128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "217": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "218": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "219": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3"
    },
    "222": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "223": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "225": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "226": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "REVERT",
      "path": "0"
    },
    "227": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "228": {
      "op": "POP"
    },
    "229": {
      "offset": [
        82,
        128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "232": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "235": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "236": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "238": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x705"
    },
    "241": {
      "fn": "WavePortal.getTotalWaves",
      "jump": "i",
      "offset": [
        82,
        128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "245": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "247": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "248": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "249": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "250": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "251": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "252": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "253": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "255": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "256": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "257": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "258": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "259": {
      "fn": "WavePortal.getTotalWaves",
      "offset": [
        82,
        128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "262": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "264": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110"
    },
    "267": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "268": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "270": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "271": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "REVERT",
      "path": "0"
    },
    "272": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "273": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "POP",
      "path": "0"
    },
    "274": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119"
    },
    "277": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CC"
    },
    "280": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "281": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "282": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "284": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "285": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E"
    },
    "288": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "289": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "290": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x782"
    },
    "293": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "294": {
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "295": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "296": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "297": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "298": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "301": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "302": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "304": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "305": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "REVERT",
      "path": "0"
    },
    "306": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "op": "POP"
    },
    "308": {
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "311": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "314": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "315": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "317": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80E"
    },
    "320": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        371,
        390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "321": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DD"
    },
    "325": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        371,
        390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "326": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "329": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "330": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E"
    },
    "333": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "334": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "335": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "336": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "337": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x827"
    },
    "340": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        371,
        390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "341": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "342": {
      "fn": "WavePortal.wave",
      "offset": [
        782,
        783
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "344": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "346": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "348": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "DUP3",
      "path": "0"
    },
    "349": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "DUP3",
      "path": "0"
    },
    "350": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "351": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "354": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "355": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "356": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85B"
    },
    "359": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        768,
        783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "360": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "362": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "363": {
      "fn": "WavePortal.wave",
      "offset": [
        768,
        783
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "364": {
      "op": "POP"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "368": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "369": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "370": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "372": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "373": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "ADD",
      "path": "0"
    },
    "374": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP3",
      "path": "0"
    },
    "375": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "376": {
      "fn": "WavePortal.wave",
      "offset": [
        810,
        820
      ],
      "op": "CALLER",
      "path": "0"
    },
    "377": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "378": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "379": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "381": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP1",
      "path": "0"
    },
    "382": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP3",
      "path": "0"
    },
    "383": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "ADD",
      "path": "0"
    },
    "384": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP5",
      "path": "0"
    },
    "385": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP2",
      "path": "0"
    },
    "386": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "387": {
      "fn": "WavePortal.wave",
      "offset": [
        832,
        847
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "388": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "389": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "DUP4",
      "path": "0"
    },
    "390": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "ADD",
      "path": "0"
    },
    "391": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "392": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "393": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "394": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "395": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        799
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "397": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "398": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "399": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "401": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "402": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "ADD",
      "path": "0"
    },
    "403": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP3",
      "path": "0"
    },
    "404": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "407": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP3",
      "path": "0"
    },
    "408": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "409": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "410": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP4",
      "path": "0"
    },
    "411": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "412": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "413": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "MUL",
      "path": "0"
    },
    "414": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "447": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "448": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "ADD",
      "path": "0"
    },
    "449": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "450": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "457": {
      "op": "SHL"
    },
    "458": {
      "op": "SUB"
    },
    "459": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "460": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "461": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "462": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "AND",
      "path": "0"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "op": "NOT"
    },
    "472": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "473": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "474": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "AND",
      "path": "0"
    },
    "475": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "476": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "477": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "478": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "OR",
      "path": "0"
    },
    "479": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP3",
      "path": "0"
    },
    "480": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "481": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "482": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "483": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP1",
      "path": "0"
    },
    "484": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "485": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "486": {
      "fn": "WavePortal.wave",
      "offset": [
        805,
        848
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "487": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "488": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "489": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "492": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "493": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C"
    },
    "526": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "527": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "528": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "ADD",
      "path": "0"
    },
    "529": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "530": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "531": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "532": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "533": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "ADD",
      "path": "0"
    },
    "534": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "535": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A5"
    },
    "538": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        794,
        849
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "POP",
      "path": "0"
    },
    "541": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "543": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP3",
      "path": "0"
    },
    "544": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "ADD",
      "path": "0"
    },
    "545": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "546": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "DUP2",
      "path": "0"
    },
    "547": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "549": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "ADD",
      "path": "0"
    },
    "550": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "551": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "POP",
      "path": "0"
    },
    "552": {
      "fn": "WavePortal.wave",
      "offset": [
        794,
        849
      ],
      "op": "POP",
      "path": "0"
    },
    "553": {
      "fn": "WavePortal.wave",
      "offset": [
        913,
        916
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x64"
    },
    "555": {
      "fn": "WavePortal.wave",
      "offset": [
        905,
        909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "557": {
      "fn": "WavePortal.wave",
      "offset": [
        905,
        909
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "558": {
      "fn": "WavePortal.wave",
      "offset": [
        886,
        902
      ],
      "op": "DIFFICULTY",
      "path": "0"
    },
    "559": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        883
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "560": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x239"
    },
    "563": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        902
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "564": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        902
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "565": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85B"
    },
    "568": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        868,
        902
      ],
      "op": "JUMP",
      "path": "0"
    },
    "569": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "570": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "573": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "574": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "575": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85B"
    },
    "578": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        868,
        909
      ],
      "op": "JUMP",
      "path": "0"
    },
    "579": {
      "fn": "WavePortal.wave",
      "offset": [
        868,
        909
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "WavePortal.wave",
      "offset": [
        867,
        916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24D"
    },
    "583": {
      "fn": "WavePortal.wave",
      "offset": [
        867,
        916
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "584": {
      "fn": "WavePortal.wave",
      "offset": [
        867,
        916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "WavePortal.wave",
      "offset": [
        867,
        916
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x881"
    },
    "588": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        867,
        916
      ],
      "op": "JUMP",
      "path": "0"
    },
    "589": {
      "fn": "WavePortal.wave",
      "offset": [
        867,
        916
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "590": {
      "fn": "WavePortal.wave",
      "offset": [
        860,
        864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "592": {
      "fn": "WavePortal.wave",
      "offset": [
        860,
        916
      ],
      "op": "DUP2",
      "path": "0"
    },
    "593": {
      "fn": "WavePortal.wave",
      "offset": [
        860,
        916
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "594": {
      "fn": "WavePortal.wave",
      "offset": [
        860,
        916
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "595": {
      "fn": "WavePortal.wave",
      "offset": [
        939,
        941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "597": {
      "op": "LT"
    },
    "598": {
      "fn": "WavePortal.wave",
      "offset": [
        927,
        1322
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x386"
    },
    "601": {
      "fn": "WavePortal.wave",
      "offset": [
        927,
        1322
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "602": {
      "fn": "WavePortal.wave",
      "offset": [
        979,
        991
      ],
      "op": "PUSH6",
      "path": "0",
      "value": "0x5AF3107A4000"
    },
    "609": {
      "fn": "WavePortal.wave",
      "offset": [
        1045,
        1066
      ],
      "op": "SELFBALANCE",
      "path": "0",
      "statement": 5
    },
    "610": {
      "fn": "WavePortal.wave",
      "offset": [
        1030,
        1066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "611": {
      "fn": "WavePortal.wave",
      "offset": [
        1030,
        1066
      ],
      "op": "GT",
      "path": "0"
    },
    "612": {
      "branch": 9,
      "fn": "WavePortal.wave",
      "offset": [
        1030,
        1066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "613": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB"
    },
    "616": {
      "branch": 9,
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "617": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "619": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "DUP2",
      "path": "0"
    },
    "628": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "631": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "633": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "DUP3",
      "path": "0"
    },
    "634": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "ADD",
      "path": "0"
    },
    "635": {
      "op": "MSTORE"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "640": {
      "op": "DUP3"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "op": "MSTORE"
    },
    "643": {
      "op": "PUSH32",
      "value": "0x547279696E6720746F207769746864726177206D6F7265206D6F6E6579207468"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "678": {
      "op": "DUP3"
    },
    "679": {
      "op": "ADD"
    },
    "680": {
      "op": "MSTORE"
    },
    "681": {
      "op": "PUSH32",
      "value": "0x616E207468697320636F6E747261637420686173212121000000000000000000"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "716": {
      "op": "DUP3"
    },
    "717": {
      "op": "ADD"
    },
    "718": {
      "op": "MSTORE"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "721": {
      "op": "ADD"
    },
    "722": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "723": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "725": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "726": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "DUP1",
      "path": "0"
    },
    "727": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "728": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "SUB",
      "path": "0"
    },
    "729": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "730": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "731": {
      "fn": "WavePortal.wave",
      "offset": [
        1005,
        1155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "732": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "734": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "735": {
      "fn": "WavePortal.wave",
      "offset": [
        1171,
        1183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "737": {
      "fn": "WavePortal.wave",
      "offset": [
        1171,
        1183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "738": {
      "fn": "WavePortal.wave",
      "offset": [
        1197,
        1207
      ],
      "op": "CALLER",
      "path": "0"
    },
    "739": {
      "fn": "WavePortal.wave",
      "offset": [
        1197,
        1207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "740": {
      "fn": "WavePortal.wave",
      "offset": [
        1221,
        1232
      ],
      "op": "DUP4",
      "path": "0"
    },
    "741": {
      "fn": "WavePortal.wave",
      "offset": [
        1221,
        1232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "742": {
      "fn": "WavePortal.wave",
      "offset": [
        1171,
        1183
      ],
      "op": "DUP4",
      "path": "0"
    },
    "743": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "WavePortal.wave",
      "offset": [
        1171,
        1183
      ],
      "op": "DUP2",
      "path": "0"
    },
    "745": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "DUP2",
      "path": "0"
    },
    "746": {
      "fn": "WavePortal.wave",
      "offset": [
        1221,
        1232
      ],
      "op": "DUP6",
      "path": "0"
    },
    "747": {
      "fn": "WavePortal.wave",
      "offset": [
        1197,
        1207
      ],
      "op": "DUP8",
      "path": "0"
    },
    "748": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "GAS",
      "path": "0"
    },
    "749": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "CALL",
      "path": "0"
    },
    "750": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "751": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "752": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "753": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "754": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "755": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "DUP1",
      "path": "0"
    },
    "756": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "758": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "DUP2",
      "path": "0"
    },
    "759": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "EQ",
      "path": "0"
    },
    "760": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31D"
    },
    "763": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "764": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "766": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "767": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "768": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "769": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "771": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "NOT",
      "path": "0"
    },
    "772": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "774": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "775": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "ADD",
      "path": "0"
    },
    "776": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "AND",
      "path": "0"
    },
    "777": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "DUP3",
      "path": "0"
    },
    "778": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "ADD",
      "path": "0"
    },
    "779": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "781": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "782": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "783": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "DUP3",
      "path": "0"
    },
    "784": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "785": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "786": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "788": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "790": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "DUP5",
      "path": "0"
    },
    "791": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "ADD",
      "path": "0"
    },
    "792": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "793": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "796": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "JUMP",
      "path": "0"
    },
    "797": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "798": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "800": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "801": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "802": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "803": {
      "fn": "WavePortal.wave",
      "offset": [
        1189,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "804": {
      "fn": "WavePortal.wave",
      "offset": [
        1170,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "805": {
      "fn": "WavePortal.wave",
      "offset": [
        1170,
        1237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "806": {
      "fn": "WavePortal.wave",
      "offset": [
        1170,
        1237
      ],
      "op": "POP",
      "path": "0"
    },
    "807": {
      "branch": 10,
      "fn": "WavePortal.wave",
      "offset": [
        1260,
        1267
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 6
    },
    "808": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x383"
    },
    "811": {
      "branch": 10,
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "812": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "814": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "815": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "819": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "DUP2",
      "path": "0"
    },
    "823": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "826": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "828": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "DUP3",
      "path": "0"
    },
    "829": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "ADD",
      "path": "0"
    },
    "830": {
      "op": "MSTORE"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "835": {
      "op": "DUP3"
    },
    "836": {
      "op": "ADD"
    },
    "837": {
      "op": "MSTORE"
    },
    "838": {
      "op": "PUSH32",
      "value": "0x4661696C656420746F207769746864726177206D6F6E65792066726F6D20636F"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "873": {
      "op": "DUP3"
    },
    "874": {
      "op": "ADD"
    },
    "875": {
      "op": "MSTORE"
    },
    "876": {
      "op": "PUSH7",
      "value": "0x373A3930B1BA17"
    },
    "884": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "886": {
      "op": "SHL"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "889": {
      "op": "DUP3"
    },
    "890": {
      "op": "ADD"
    },
    "891": {
      "op": "MSTORE"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "894": {
      "op": "ADD"
    },
    "895": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D2"
    },
    "898": {
      "op": "JUMP"
    },
    "899": {
      "fn": "WavePortal.wave",
      "offset": [
        1252,
        1311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "900": {
      "fn": "WavePortal.wave",
      "offset": [
        943,
        1322
      ],
      "op": "POP",
      "path": "0"
    },
    "901": {
      "fn": "WavePortal.wave",
      "offset": [
        943,
        1322
      ],
      "op": "POP",
      "path": "0"
    },
    "902": {
      "fn": "WavePortal.wave",
      "offset": [
        927,
        1322
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "903": {
      "fn": "WavePortal.wave",
      "offset": [
        1345,
        1355
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "op": "SUB"
    },
    "912": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "AND",
      "path": "0"
    },
    "913": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x5F7E16DC676677766A70E9C5628AA6C54DDB8B6E5188E2AE1E1F17F1FFBEA716"
    },
    "946": {
      "fn": "WavePortal.wave",
      "offset": [
        1357,
        1372
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "947": {
      "fn": "WavePortal.wave",
      "offset": [
        1374,
        1382
      ],
      "op": "DUP4",
      "path": "0"
    },
    "948": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "950": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "951": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C1"
    },
    "954": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "955": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "956": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "957": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A3"
    },
    "960": {
      "fn": "WavePortal.wave",
      "jump": "i",
      "offset": [
        1337,
        1383
      ],
      "op": "JUMP",
      "path": "0"
    },
    "961": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "962": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "964": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "965": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "DUP1",
      "path": "0"
    },
    "966": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "967": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "SUB",
      "path": "0"
    },
    "968": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "969": {
      "fn": "WavePortal.wave",
      "offset": [
        1337,
        1383
      ],
      "op": "LOG2",
      "path": "0"
    },
    "970": {
      "fn": "WavePortal.wave",
      "offset": [
        491,
        1390
      ],
      "op": "POP",
      "path": "0"
    },
    "971": {
      "fn": "WavePortal.wave",
      "jump": "o",
      "offset": [
        491,
        1390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "972": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "973": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1440,
        1453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "975": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1472,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x3"
    },
    "977": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "978": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "979": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "980": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "982": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MUL",
      "path": "0"
    },
    "983": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "985": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "986": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "988": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "989": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "990": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "991": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "992": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "994": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "995": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "996": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "997": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "998": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1000": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1001": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1002": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1004": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1005": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1007": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1008": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1010": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1011": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "LT",
      "path": "0"
    },
    "1012": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1013": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D4"
    },
    "1016": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1017": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1019": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1020": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1021": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1022": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1024": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1025": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1026": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1027": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1028": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1030": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1031": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1032": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1034": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1035": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1036": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1037": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1038": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1039": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1041": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1042": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MUL",
      "path": "0"
    },
    "1043": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1044": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1045": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1046": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1047": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "SHL"
    },
    "1055": {
      "op": "SUB"
    },
    "1056": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "AND",
      "path": "0"
    },
    "1057": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1058": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1059": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1061": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1062": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1063": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1064": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1065": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1066": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1067": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1068": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1069": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1070": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1071": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1072": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1073": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x439"
    },
    "1076": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1077": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C4"
    },
    "1080": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1081": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1082": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1083": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1085": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1086": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1088": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1089": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1090": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DIV",
      "path": "0"
    },
    "1091": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MUL",
      "path": "0"
    },
    "1092": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1094": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1095": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1097": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1098": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1099": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1100": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1101": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1103": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1104": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1105": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1106": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1107": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1109": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1110": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1111": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1113": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1114": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1115": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1116": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1117": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x465"
    },
    "1120": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1121": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C4"
    },
    "1124": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1125": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1126": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1127": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1128": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B2"
    },
    "1131": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1132": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1133": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1135": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "LT",
      "path": "0"
    },
    "1136": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x487"
    },
    "1139": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1140": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1143": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1144": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1145": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1146": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DIV",
      "path": "0"
    },
    "1147": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MUL",
      "path": "0"
    },
    "1148": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1149": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1150": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1151": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1153": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1154": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1155": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B2"
    },
    "1158": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1159": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1160": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1161": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1162": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1163": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1164": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1166": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1167": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1169": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1171": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1172": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1173": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1174": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1175": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1176": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1177": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1178": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1179": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1181": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1182": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1183": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1185": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1186": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1187": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1188": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "GT",
      "path": "0"
    },
    "1189": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x495"
    },
    "1192": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1193": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1194": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1195": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SUB",
      "path": "0"
    },
    "1196": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1198": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "AND",
      "path": "0"
    },
    "1199": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1200": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1201": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1202": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1203": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1204": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1205": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1206": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1207": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1208": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1209": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1210": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1212": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1213": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1215": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1216": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1217": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1218": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1219": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1220": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1221": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1222": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1223": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1224": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1226": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1227": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1228": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1230": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "ADD",
      "path": "0"
    },
    "1231": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1232": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "1235": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1236": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1237": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1238": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1239": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1240": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1241": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1465,
        1477
      ],
      "op": "POP",
      "path": "0"
    },
    "1243": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        1396,
        1484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1244": {
      "fn": "WavePortal.getAllWaves",
      "jump": "o",
      "offset": [
        1396,
        1484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1245": {
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1246": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1248": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1249": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1251": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1252": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "LT",
      "path": "0"
    },
    "1253": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4ED"
    },
    "1256": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1257": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1259": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1260": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1261": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1262": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1264": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1265": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1266": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1267": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1269": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1270": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1271": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1272": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1274": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1275": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1276": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MUL",
      "path": "0"
    },
    "1277": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1278": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1279": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1280": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1282": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1283": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1284": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1285": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1292": {
      "op": "SHL"
    },
    "1293": {
      "op": "SUB"
    },
    "1294": {
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1295": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1296": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "AND",
      "path": "0"
    },
    "1297": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1298": {
      "op": "POP"
    },
    "1299": {
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1300": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "1303": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1304": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C4"
    },
    "1307": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        371,
        390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1308": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1310": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1312": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1313": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1315": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1316": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1317": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DIV",
      "path": "0"
    },
    "1318": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MUL",
      "path": "0"
    },
    "1319": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1321": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1322": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1324": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1325": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1326": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1327": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1328": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1330": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1331": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1332": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1333": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1334": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1335": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1336": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1338": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1340": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1341": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1342": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1343": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1344": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x548"
    },
    "1347": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1348": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C4"
    },
    "1351": {
      "fn": "WavePortal.getAllWaves",
      "jump": "i",
      "offset": [
        371,
        390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1352": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1353": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1354": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1355": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1358": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1359": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1360": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1362": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "LT",
      "path": "0"
    },
    "1363": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56A"
    },
    "1366": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1367": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1370": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1371": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1372": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1373": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DIV",
      "path": "0"
    },
    "1374": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MUL",
      "path": "0"
    },
    "1375": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1376": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1377": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1378": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1380": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1381": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1382": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1385": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1386": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1387": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1388": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1389": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1390": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1391": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1393": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1394": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1396": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1398": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1399": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1400": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1401": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1402": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1403": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1404": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1405": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1406": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1408": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1409": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1412": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1413": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1414": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1415": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "GT",
      "path": "0"
    },
    "1416": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "1419": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1420": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1421": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1422": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SUB",
      "path": "0"
    },
    "1423": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1425": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "AND",
      "path": "0"
    },
    "1426": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1427": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1428": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1429": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1430": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "POP",
      "path": "0"
    },
    "1431": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "POP",
      "path": "0"
    },
    "1432": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "POP",
      "path": "0"
    },
    "1433": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "POP",
      "path": "0"
    },
    "1434": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "POP",
      "path": "0"
    },
    "1435": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1437": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1439": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "ADD",
      "path": "0"
    },
    "1440": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1441": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1442": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "POP",
      "path": "0"
    },
    "1443": {
      "fn": "WavePortal.getAllWaves",
      "offset": [
        371,
        390
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1444": {
      "fn": "WavePortal.getAllWaves",
      "jump": "o",
      "offset": [
        371,
        390
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1445": {
      "op": "JUMPDEST"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "DUP1"
    },
    "1448": {
      "op": "SLOAD"
    },
    "1449": {
      "op": "PUSH2",
      "value": "0x5B1"
    },
    "1452": {
      "op": "SWAP1"
    },
    "1453": {
      "op": "PUSH2",
      "value": "0x8C4"
    },
    "1456": {
      "jump": "i",
      "op": "JUMP"
    },
    "1457": {
      "op": "JUMPDEST"
    },
    "1458": {
      "op": "SWAP1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1461": {
      "op": "MSTORE"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1466": {
      "op": "KECCAK256"
    },
    "1467": {
      "op": "SWAP1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1470": {
      "op": "ADD"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1473": {
      "op": "SWAP1"
    },
    "1474": {
      "op": "DIV"
    },
    "1475": {
      "op": "DUP2"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "SWAP3"
    },
    "1478": {
      "op": "DUP3"
    },
    "1479": {
      "op": "PUSH2",
      "value": "0x5D3"
    },
    "1482": {
      "op": "JUMPI"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1485": {
      "op": "DUP6"
    },
    "1486": {
      "op": "SSTORE"
    },
    "1487": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "1490": {
      "op": "JUMP"
    },
    "1491": {
      "op": "JUMPDEST"
    },
    "1492": {
      "op": "DUP3"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1495": {
      "op": "LT"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "1499": {
      "op": "JUMPI"
    },
    "1500": {
      "op": "DUP1"
    },
    "1501": {
      "op": "MLOAD"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1504": {
      "op": "NOT"
    },
    "1505": {
      "op": "AND"
    },
    "1506": {
      "op": "DUP4"
    },
    "1507": {
      "op": "DUP1"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "op": "OR"
    },
    "1510": {
      "op": "DUP6"
    },
    "1511": {
      "op": "SSTORE"
    },
    "1512": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "1515": {
      "op": "JUMP"
    },
    "1516": {
      "op": "JUMPDEST"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "DUP1"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1522": {
      "op": "ADD"
    },
    "1523": {
      "op": "DUP6"
    },
    "1524": {
      "op": "SSTORE"
    },
    "1525": {
      "op": "DUP3"
    },
    "1526": {
      "op": "ISZERO"
    },
    "1527": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "1530": {
      "op": "JUMPI"
    },
    "1531": {
      "op": "SWAP2"
    },
    "1532": {
      "op": "DUP3"
    },
    "1533": {
      "op": "ADD"
    },
    "1534": {
      "op": "JUMPDEST"
    },
    "1535": {
      "op": "DUP3"
    },
    "1536": {
      "op": "DUP2"
    },
    "1537": {
      "op": "GT"
    },
    "1538": {
      "op": "ISZERO"
    },
    "1539": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "1542": {
      "op": "JUMPI"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "MLOAD"
    },
    "1545": {
      "op": "DUP3"
    },
    "1546": {
      "op": "SSTORE"
    },
    "1547": {
      "op": "SWAP2"
    },
    "1548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1550": {
      "op": "ADD"
    },
    "1551": {
      "op": "SWAP2"
    },
    "1552": {
      "op": "SWAP1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "SWAP1"
    },
    "1557": {
      "op": "PUSH2",
      "value": "0x5FE"
    },
    "1560": {
      "op": "JUMP"
    },
    "1561": {
      "op": "JUMPDEST"
    },
    "1562": {
      "op": "POP"
    },
    "1563": {
      "op": "PUSH2",
      "value": "0x625"
    },
    "1566": {
      "op": "SWAP3"
    },
    "1567": {
      "op": "SWAP2"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "PUSH2",
      "value": "0x629"
    },
    "1572": {
      "jump": "i",
      "op": "JUMP"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "SWAP1"
    },
    "1576": {
      "jump": "o",
      "op": "JUMP"
    },
    "1577": {
      "op": "JUMPDEST"
    },
    "1578": {
      "op": "JUMPDEST"
    },
    "1579": {
      "op": "DUP1"
    },
    "1580": {
      "op": "DUP3"
    },
    "1581": {
      "op": "GT"
    },
    "1582": {
      "op": "ISZERO"
    },
    "1583": {
      "op": "PUSH2",
      "value": "0x625"
    },
    "1586": {
      "op": "JUMPI"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1589": {
      "op": "DUP2"
    },
    "1590": {
      "op": "SSTORE"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "op": "PUSH2",
      "value": "0x62A"
    },
    "1597": {
      "op": "JUMP"
    },
    "1598": {
      "op": "JUMPDEST"
    },
    "1599": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1606": {
      "op": "SHL"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "MSTORE"
    },
    "1610": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1614": {
      "op": "MSTORE"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1619": {
      "op": "REVERT"
    },
    "1620": {
      "op": "JUMPDEST"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1625": {
      "op": "DUP3"
    },
    "1626": {
      "op": "DUP5"
    },
    "1627": {
      "op": "SUB"
    },
    "1628": {
      "op": "SLT"
    },
    "1629": {
      "op": "ISZERO"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x666"
    },
    "1633": {
      "op": "JUMPI"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1636": {
      "op": "DUP1"
    },
    "1637": {
      "op": "REVERT"
    },
    "1638": {
      "op": "JUMPDEST"
    },
    "1639": {
      "op": "DUP2"
    },
    "1640": {
      "op": "CALLDATALOAD"
    },
    "1641": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1650": {
      "op": "DUP1"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "GT"
    },
    "1653": {
      "op": "ISZERO"
    },
    "1654": {
      "op": "PUSH2",
      "value": "0x67E"
    },
    "1657": {
      "op": "JUMPI"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1660": {
      "op": "DUP1"
    },
    "1661": {
      "op": "REVERT"
    },
    "1662": {
      "op": "JUMPDEST"
    },
    "1663": {
      "op": "DUP2"
    },
    "1664": {
      "op": "DUP5"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "SWAP2"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "op": "DUP5"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1671": {
      "op": "DUP4"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "SLT"
    },
    "1674": {
      "op": "PUSH2",
      "value": "0x692"
    },
    "1677": {
      "op": "JUMPI"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1680": {
      "op": "DUP1"
    },
    "1681": {
      "op": "REVERT"
    },
    "1682": {
      "op": "JUMPDEST"
    },
    "1683": {
      "op": "DUP2"
    },
    "1684": {
      "op": "CALLDATALOAD"
    },
    "1685": {
      "op": "DUP2"
    },
    "1686": {
      "op": "DUP2"
    },
    "1687": {
      "op": "GT"
    },
    "1688": {
      "op": "ISZERO"
    },
    "1689": {
      "op": "PUSH2",
      "value": "0x6A4"
    },
    "1692": {
      "op": "JUMPI"
    },
    "1693": {
      "op": "PUSH2",
      "value": "0x6A4"
    },
    "1696": {
      "op": "PUSH2",
      "value": "0x63E"
    },
    "1699": {
      "jump": "i",
      "op": "JUMP"
    },
    "1700": {
      "op": "JUMPDEST"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1703": {
      "op": "MLOAD"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1706": {
      "op": "DUP3"
    },
    "1707": {
      "op": "ADD"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1710": {
      "op": "NOT"
    },
    "1711": {
      "op": "SWAP1"
    },
    "1712": {
      "op": "DUP2"
    },
    "1713": {
      "op": "AND"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "op": "AND"
    },
    "1718": {
      "op": "DUP2"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "op": "SWAP1"
    },
    "1721": {
      "op": "DUP4"
    },
    "1722": {
      "op": "DUP3"
    },
    "1723": {
      "op": "GT"
    },
    "1724": {
      "op": "DUP2"
    },
    "1725": {
      "op": "DUP4"
    },
    "1726": {
      "op": "LT"
    },
    "1727": {
      "op": "OR"
    },
    "1728": {
      "op": "ISZERO"
    },
    "1729": {
      "op": "PUSH2",
      "value": "0x6CC"
    },
    "1732": {
      "op": "JUMPI"
    },
    "1733": {
      "op": "PUSH2",
      "value": "0x6CC"
    },
    "1736": {
      "op": "PUSH2",
      "value": "0x63E"
    },
    "1739": {
      "jump": "i",
      "op": "JUMP"
    },
    "1740": {
      "op": "JUMPDEST"
    },
    "1741": {
      "op": "DUP2"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1744": {
      "op": "MSTORE"
    },
    "1745": {
      "op": "DUP3"
    },
    "1746": {
      "op": "DUP2"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "DUP8"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1751": {
      "op": "DUP5"
    },
    "1752": {
      "op": "DUP8"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "GT"
    },
    "1756": {
      "op": "ISZERO"
    },
    "1757": {
      "op": "PUSH2",
      "value": "0x6E5"
    },
    "1760": {
      "op": "JUMPI"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1763": {
      "op": "DUP1"
    },
    "1764": {
      "op": "REVERT"
    },
    "1765": {
      "op": "JUMPDEST"
    },
    "1766": {
      "op": "DUP3"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1769": {
      "op": "DUP7"
    },
    "1770": {
      "op": "ADD"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1773": {
      "op": "DUP4"
    },
    "1774": {
      "op": "ADD"
    },
    "1775": {
      "op": "CALLDATACOPY"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1778": {
      "op": "SWAP3"
    },
    "1779": {
      "op": "DUP2"
    },
    "1780": {
      "op": "ADD"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1783": {
      "op": "ADD"
    },
    "1784": {
      "op": "SWAP3"
    },
    "1785": {
      "op": "SWAP1"
    },
    "1786": {
      "op": "SWAP3"
    },
    "1787": {
      "op": "MSTORE"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "SWAP6"
    },
    "1790": {
      "op": "SWAP5"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "op": "POP"
    },
    "1794": {
      "op": "POP"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "jump": "o",
      "op": "JUMP"
    },
    "1797": {
      "op": "JUMPDEST"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1802": {
      "op": "DUP3"
    },
    "1803": {
      "op": "DUP5"
    },
    "1804": {
      "op": "SUB"
    },
    "1805": {
      "op": "SLT"
    },
    "1806": {
      "op": "ISZERO"
    },
    "1807": {
      "op": "PUSH2",
      "value": "0x717"
    },
    "1810": {
      "op": "JUMPI"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1813": {
      "op": "DUP1"
    },
    "1814": {
      "op": "REVERT"
    },
    "1815": {
      "op": "JUMPDEST"
    },
    "1816": {
      "op": "DUP2"
    },
    "1817": {
      "op": "CALLDATALOAD"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "op": "SUB"
    },
    "1826": {
      "op": "DUP2"
    },
    "1827": {
      "op": "AND"
    },
    "1828": {
      "op": "DUP2"
    },
    "1829": {
      "op": "EQ"
    },
    "1830": {
      "op": "PUSH2",
      "value": "0x72E"
    },
    "1833": {
      "op": "JUMPI"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1836": {
      "op": "DUP1"
    },
    "1837": {
      "op": "REVERT"
    },
    "1838": {
      "op": "JUMPDEST"
    },
    "1839": {
      "op": "SWAP4"
    },
    "1840": {
      "op": "SWAP3"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "op": "POP"
    },
    "1844": {
      "jump": "o",
      "op": "JUMP"
    },
    "1845": {
      "op": "JUMPDEST"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1848": {
      "op": "DUP2"
    },
    "1849": {
      "op": "MLOAD"
    },
    "1850": {
      "op": "DUP1"
    },
    "1851": {
      "op": "DUP5"
    },
    "1852": {
      "op": "MSTORE"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1855": {
      "op": "JUMPDEST"
    },
    "1856": {
      "op": "DUP2"
    },
    "1857": {
      "op": "DUP2"
    },
    "1858": {
      "op": "LT"
    },
    "1859": {
      "op": "ISZERO"
    },
    "1860": {
      "op": "PUSH2",
      "value": "0x75B"
    },
    "1863": {
      "op": "JUMPI"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1866": {
      "op": "DUP2"
    },
    "1867": {
      "op": "DUP6"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "op": "DUP2"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "op": "MLOAD"
    },
    "1872": {
      "op": "DUP7"
    },
    "1873": {
      "op": "DUP4"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "DUP3"
    },
    "1876": {
      "op": "ADD"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "ADD"
    },
    "1879": {
      "op": "PUSH2",
      "value": "0x73F"
    },
    "1882": {
      "op": "JUMP"
    },
    "1883": {
      "op": "JUMPDEST"
    },
    "1884": {
      "op": "DUP2"
    },
    "1885": {
      "op": "DUP2"
    },
    "1886": {
      "op": "GT"
    },
    "1887": {
      "op": "ISZERO"
    },
    "1888": {
      "op": "PUSH2",
      "value": "0x76D"
    },
    "1891": {
      "op": "JUMPI"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1896": {
      "op": "DUP4"
    },
    "1897": {
      "op": "DUP8"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "MSTORE"
    },
    "1901": {
      "op": "JUMPDEST"
    },
    "1902": {
      "op": "POP"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1905": {
      "op": "ADD"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1908": {
      "op": "NOT"
    },
    "1909": {
      "op": "AND"
    },
    "1910": {
      "op": "SWAP3"
    },
    "1911": {
      "op": "SWAP1"
    },
    "1912": {
      "op": "SWAP3"
    },
    "1913": {
      "op": "ADD"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1916": {
      "op": "ADD"
    },
    "1917": {
      "op": "SWAP3"
    },
    "1918": {
      "op": "SWAP2"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "jump": "o",
      "op": "JUMP"
    },
    "1922": {
      "op": "JUMPDEST"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1927": {
      "op": "DUP1"
    },
    "1928": {
      "op": "DUP4"
    },
    "1929": {
      "op": "ADD"
    },
    "1930": {
      "op": "DUP2"
    },
    "1931": {
      "op": "DUP5"
    },
    "1932": {
      "op": "MSTORE"
    },
    "1933": {
      "op": "DUP1"
    },
    "1934": {
      "op": "DUP6"
    },
    "1935": {
      "op": "MLOAD"
    },
    "1936": {
      "op": "DUP1"
    },
    "1937": {
      "op": "DUP4"
    },
    "1938": {
      "op": "MSTORE"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1941": {
      "op": "SWAP3"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "op": "DUP3"
    },
    "1944": {
      "op": "DUP7"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "op": "SWAP2"
    },
    "1947": {
      "op": "POP"
    },
    "1948": {
      "op": "DUP3"
    },
    "1949": {
      "op": "DUP2"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "DUP8"
    },
    "1954": {
      "op": "ADD"
    },
    "1955": {
      "op": "ADD"
    },
    "1956": {
      "op": "DUP5"
    },
    "1957": {
      "op": "DUP9"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "JUMPDEST"
    },
    "1962": {
      "op": "DUP4"
    },
    "1963": {
      "op": "DUP2"
    },
    "1964": {
      "op": "LT"
    },
    "1965": {
      "op": "ISZERO"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x800"
    },
    "1969": {
      "op": "JUMPI"
    },
    "1970": {
      "op": "DUP9"
    },
    "1971": {
      "op": "DUP4"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1975": {
      "op": "NOT"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "DUP6"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "DUP2"
    },
    "1980": {
      "op": "MLOAD"
    },
    "1981": {
      "op": "DUP1"
    },
    "1982": {
      "op": "MLOAD"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1989": {
      "op": "SHL"
    },
    "1990": {
      "op": "SUB"
    },
    "1991": {
      "op": "AND"
    },
    "1992": {
      "op": "DUP5"
    },
    "1993": {
      "op": "MSTORE"
    },
    "1994": {
      "op": "DUP8"
    },
    "1995": {
      "op": "DUP2"
    },
    "1996": {
      "op": "ADD"
    },
    "1997": {
      "op": "MLOAD"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2000": {
      "op": "DUP10"
    },
    "2001": {
      "op": "DUP7"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "DUP2"
    },
    "2004": {
      "op": "SWAP1"
    },
    "2005": {
      "op": "MSTORE"
    },
    "2006": {
      "op": "SWAP1"
    },
    "2007": {
      "op": "PUSH2",
      "value": "0x7E2"
    },
    "2010": {
      "op": "DUP3"
    },
    "2011": {
      "op": "DUP8"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "DUP3"
    },
    "2014": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "2017": {
      "jump": "i",
      "op": "JUMP"
    },
    "2018": {
      "op": "JUMPDEST"
    },
    "2019": {
      "op": "SWAP3"
    },
    "2020": {
      "op": "DUP10"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "MLOAD"
    },
    "2023": {
      "op": "SWAP6"
    },
    "2024": {
      "op": "DUP10"
    },
    "2025": {
      "op": "ADD"
    },
    "2026": {
      "op": "SWAP6"
    },
    "2027": {
      "op": "SWAP1"
    },
    "2028": {
      "op": "SWAP6"
    },
    "2029": {
      "op": "MSTORE"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "op": "SWAP5"
    },
    "2032": {
      "op": "DUP8"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "SWAP5"
    },
    "2035": {
      "op": "SWAP3"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "SWAP1"
    },
    "2038": {
      "op": "DUP7"
    },
    "2039": {
      "op": "ADD"
    },
    "2040": {
      "op": "SWAP1"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "ADD"
    },
    "2044": {
      "op": "PUSH2",
      "value": "0x7A9"
    },
    "2047": {
      "op": "JUMP"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "POP"
    },
    "2050": {
      "op": "SWAP1"
    },
    "2051": {
      "op": "SWAP9"
    },
    "2052": {
      "op": "SWAP8"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "op": "POP"
    },
    "2055": {
      "op": "POP"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "op": "POP"
    },
    "2058": {
      "op": "POP"
    },
    "2059": {
      "op": "POP"
    },
    "2060": {
      "op": "POP"
    },
    "2061": {
      "jump": "o",
      "op": "JUMP"
    },
    "2062": {
      "op": "JUMPDEST"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2067": {
      "op": "DUP3"
    },
    "2068": {
      "op": "DUP5"
    },
    "2069": {
      "op": "SUB"
    },
    "2070": {
      "op": "SLT"
    },
    "2071": {
      "op": "ISZERO"
    },
    "2072": {
      "op": "PUSH2",
      "value": "0x820"
    },
    "2075": {
      "op": "JUMPI"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2078": {
      "op": "DUP1"
    },
    "2079": {
      "op": "REVERT"
    },
    "2080": {
      "op": "JUMPDEST"
    },
    "2081": {
      "op": "POP"
    },
    "2082": {
      "op": "CALLDATALOAD"
    },
    "2083": {
      "op": "SWAP2"
    },
    "2084": {
      "op": "SWAP1"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "jump": "o",
      "op": "JUMP"
    },
    "2087": {
      "op": "JUMPDEST"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "op": "SUB"
    },
    "2096": {
      "op": "DUP5"
    },
    "2097": {
      "op": "AND"
    },
    "2098": {
      "op": "DUP2"
    },
    "2099": {
      "op": "MSTORE"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2104": {
      "op": "DUP3"
    },
    "2105": {
      "op": "ADD"
    },
    "2106": {
      "op": "DUP2"
    },
    "2107": {
      "op": "SWAP1"
    },
    "2108": {
      "op": "MSTORE"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2111": {
      "op": "SWAP1"
    },
    "2112": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2115": {
      "op": "SWAP1"
    },
    "2116": {
      "op": "DUP4"
    },
    "2117": {
      "op": "ADD"
    },
    "2118": {
      "op": "DUP6"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "2122": {
      "jump": "i",
      "op": "JUMP"
    },
    "2123": {
      "op": "JUMPDEST"
    },
    "2124": {
      "op": "SWAP1"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "op": "DUP3"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2129": {
      "op": "DUP4"
    },
    "2130": {
      "op": "ADD"
    },
    "2131": {
      "op": "MSTORE"
    },
    "2132": {
      "op": "SWAP5"
    },
    "2133": {
      "op": "SWAP4"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "jump": "o",
      "op": "JUMP"
    },
    "2139": {
      "op": "JUMPDEST"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2142": {
      "op": "DUP3"
    },
    "2143": {
      "op": "NOT"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "GT"
    },
    "2146": {
      "op": "ISZERO"
    },
    "2147": {
      "op": "PUSH2",
      "value": "0x87C"
    },
    "2150": {
      "op": "JUMPI"
    },
    "2151": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2158": {
      "op": "SHL"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2161": {
      "op": "MSTORE"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2166": {
      "op": "MSTORE"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2171": {
      "op": "REVERT"
    },
    "2172": {
      "op": "JUMPDEST"
    },
    "2173": {
      "op": "POP"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "op": "SWAP1"
    },
    "2176": {
      "jump": "o",
      "op": "JUMP"
    },
    "2177": {
      "op": "JUMPDEST"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2180": {
      "op": "DUP3"
    },
    "2181": {
      "op": "PUSH2",
      "value": "0x89E"
    },
    "2184": {
      "op": "JUMPI"
    },
    "2185": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2195": {
      "op": "MSTORE"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2200": {
      "op": "MSTORE"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2205": {
      "op": "REVERT"
    },
    "2206": {
      "op": "JUMPDEST"
    },
    "2207": {
      "op": "POP"
    },
    "2208": {
      "op": "MOD"
    },
    "2209": {
      "op": "SWAP1"
    },
    "2210": {
      "jump": "o",
      "op": "JUMP"
    },
    "2211": {
      "op": "JUMPDEST"
    },
    "2212": {
      "op": "DUP3"
    },
    "2213": {
      "op": "DUP2"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2219": {
      "op": "DUP3"
    },
    "2220": {
      "op": "ADD"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2224": {
      "op": "PUSH2",
      "value": "0x8BC"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2229": {
      "op": "DUP4"
    },
    "2230": {
      "op": "ADD"
    },
    "2231": {
      "op": "DUP5"
    },
    "2232": {
      "op": "PUSH2",
      "value": "0x735"
    },
    "2235": {
      "jump": "i",
      "op": "JUMP"
    },
    "2236": {
      "op": "JUMPDEST"
    },
    "2237": {
      "op": "SWAP5"
    },
    "2238": {
      "op": "SWAP4"
    },
    "2239": {
      "op": "POP"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "jump": "o",
      "op": "JUMP"
    },
    "2244": {
      "op": "JUMPDEST"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2247": {
      "op": "DUP2"
    },
    "2248": {
      "op": "DUP2"
    },
    "2249": {
      "op": "SHR"
    },
    "2250": {
      "op": "SWAP1"
    },
    "2251": {
      "op": "DUP3"
    },
    "2252": {
      "op": "AND"
    },
    "2253": {
      "op": "DUP1"
    },
    "2254": {
      "op": "PUSH2",
      "value": "0x8D8"
    },
    "2257": {
      "op": "JUMPI"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2260": {
      "op": "DUP3"
    },
    "2261": {
      "op": "AND"
    },
    "2262": {
      "op": "SWAP2"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "op": "JUMPDEST"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2267": {
      "op": "DUP3"
    },
    "2268": {
      "op": "LT"
    },
    "2269": {
      "op": "DUP2"
    },
    "2270": {
      "op": "SUB"
    },
    "2271": {
      "op": "PUSH2",
      "value": "0x8F8"
    },
    "2274": {
      "op": "JUMPI"
    },
    "2275": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2285": {
      "op": "MSTORE"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2290": {
      "op": "MSTORE"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2295": {
      "op": "REVERT"
    },
    "2296": {
      "op": "JUMPDEST"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "op": "SWAP2"
    },
    "2299": {
      "op": "SWAP1"
    },
    "2300": {
      "op": "POP"
    },
    "2301": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5fffbab5cacb0240bdff5d5e2623f4d0e893063c",
  "source": "// SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\n\ncontract WavePortal {\n    mapping(address => uint256) public lastWavedAt;\n\n    uint256 private seed;\n    uint256 public totalWaves;\n\n    event NewWave(address indexed _from, uint256 timestamp, string _message);\n\n    struct Wave {\n        address waver;\n        string message;\n        uint256 timestamp;\n    }\n\n    Wave[] public waves;\n\n    constructor() payable {\n        seed = (block.timestamp + block.difficulty) % 100;\n    }\n\n    function wave(string memory _message) public payable {\n        //     require(\n        //         lastWavedAt[msg.sender] + 15 seconds < block.timestamp,\n        //         \"Wait 15 seconds\"\n        //     );\n\n        //     lastWavedAt[msg.sender] = block.timestamp;\n\n        totalWaves += 1;\n\n        waves.push(Wave(msg.sender, _message, block.timestamp));\n\n        seed = (block.timestamp + block.difficulty + seed) % 100;\n\n        if (seed <= 50) {\n            uint256 prizeAmount = 0.0001 ether;\n            require(\n                prizeAmount <= address(this).balance,\n                \"Trying to withdraw more money than this contract has!!!\"\n            );\n\n            (bool success, ) = payable(msg.sender).call{value: prizeAmount}(\"\");\n\n            require(success, \"Failed to withdraw money from contract.\");\n        }\n\n        emit NewWave(msg.sender, block.timestamp, _message);\n    }\n\n    function getAllWaves() public view returns (Wave[] memory) {\n        return waves;\n    }\n\n    function getTotalWaves() public view returns (uint256) {\n        return totalWaves;\n    }\n\n    function get_Balance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n",
  "sourceMap": "56:1629:0:-:0;;;475:3;437:34;455:16;437:15;:34;:::i;:::-;436:42;;;;:::i;:::-;429:4;:49;56:1629;;14:225:1;54:3;85:1;81:6;78:1;75:13;72:136;;;130:10;125:3;121:20;118:1;111:31;165:4;162:1;155:15;193:4;190:1;183:15;72:136;-1:-1:-1;224:9:1;;14:225::o;244:209::-;276:1;302;292:132;;346:10;341:3;337:20;334:1;327:31;381:4;378:1;371:15;409:4;406:1;399:15;292:132;-1:-1:-1;438:9:1;;244:209::o;:::-;56:1629:0;;;;;;",
  "sourcePath": "contracts/WavePortal.sol",
  "type": "contract"
}